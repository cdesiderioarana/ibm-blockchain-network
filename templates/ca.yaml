---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "network.name" . }}-ca
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  template:
    metadata:
      name: {{ template "network.name" . }}-ca
      labels:
        app: {{ .Chart.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: ca
    spec:
      volumes:
      - name: {{ template "network.name" . }}-shared-pvc
        persistentVolumeClaim:
         claimName: {{ template "network.name" . }}-shared-pvc
      containers:
      - name: ca
        image: {{ .Values.fabric.caImage }}
        imagePullPolicy: {{ .Values.fabric.pullPolicy }}
        command:
        - sh
        - -c
        - |
          sleep 2s
          while [ ! -f /shared/bootstrapped ]; do
            echo Waiting for bootstrap
            sleep 5s
          done

          touch /shared/status_fabricca_complete &&
          fabric-ca-server start -b admin:adminpw -d
        env:
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/ordererOrganizations/example.com/ca/ca.example.com-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /mnt/crypto-config/ordererOrganizations/example.com/ca/key.pem #948030ba41c19d662d767eb6f0d8196ff95c87f8f838fc4b8951f886357d82e8_sk
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: {{ template "network.name" . }}-shared-pvc
...
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "network.name" . }}-ca
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: NodePort
  selector:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: ca
  ports:
  - protocol: TCP
    port: 7054
    #nodePort: 30000
    name: grpc
...