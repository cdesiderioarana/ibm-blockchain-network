---
apiVersion: v1
kind: Pod
metadata:
  name: {{ template "ibm-blockchain-network.name" . }}-utils
  labels:
    app: {{ template "ibm-blockchain-network.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  restartPolicy: "Never"
  volumes:
  - name: {{ template "ibm-blockchain-shared.name" . }}-pvc
    persistentVolumeClaim:
     claimName: {{ template "ibm-blockchain-shared.name" . }}-pvc
  - name: dockersocket
    hostPath:
      path: /var/run/docker.sock
  - name: {{ template "ibm-blockchain-composer.name" . }}-pvc
    persistentVolumeClaim:
      claimName: {{ template "ibm-blockchain-composer.name" . }}-pvc
  - name: sampleconfig
    emptyDir: {}
  initContainers:
  - name: init-service
    image: gcr.io/cloud-builders/git
    command:
    - sh # override the Builder's default 'git' entrypoint
    - -c
    - |
      git init
      git remote add -f origin https://github.com/IBM-Blockchain/ibm-container-service
      git config core.sparseCheckout true
      echo "/sampleconfig" >> .git/info/sparse-checkout
      git pull origin master
    volumeMounts:
    - mountPath: /sampleconfig
      name: sampleconfig
  containers:
  - name: cryptogen
    image: {{ .Values.fabric.toolsImage }}
    imagePullPolicy: {{ .Values.fabric.pullPolicy }}
    command:
    - sh
    - -c
    - |
      cryptogen generate --config /sampleconfig/crypto-config.yaml &&
      cp -r crypto-config /shared/

      for file in $(find /shared/ -iname *_sk); do
        dir=$(dirname $file); mv ${dir}/*_sk ${dir}/key.pem
      done

      find /shared -type d | xargs chmod a+rx &&
      find /shared -type f | xargs chmod a+r &&
      touch /shared/status_cryptogen_complete
    volumeMounts:
    - mountPath: /shared
      name: {{ template "ibm-blockchain-shared.name" . }}-pvc
    - mountPath: /sampleconfig
      name: sampleconfig
  - name: configtxgen
    image: {{ .Values.fabric.toolsImage }}
    imagePullPolicy: {{ .Values.fabric.pullPolicy }}
    command:
    - sh
    - -c
    - |
      sleep 2s
      while [ ! -f /shared/status_cryptogen_complete ]; do
        echo Waiting for cryptogen
        sleep 5s
      done
      echo 'sample config is =>' &&
      ls /sampleconfig &&
      cp /sampleconfig/configtx.yaml /shared/configtx.yaml &&
      echo 'shared after copy is =>' &&
      ls /shared &&
      cd /shared/ &&
      configtxgen -profile TwoOrgsOrdererGenesis -outputBlock orderer.block &&
      find /shared -type d | xargs chmod a+rx &&
      find /shared -type f | xargs chmod a+r &&
      touch /shared/status_configtxgen_complete &&
      rm -f /shared/status_cryptogen_complete
    env:
     - name: PEERHOST1
       value: {{ template "ibm-blockchain-network.name" . }}-org1peer1
     - name: PEERPORT1
       value: "30110"
     - name: PEERHOST2
       value: {{ template "ibm-blockchain-network.name" . }}-org2peer1
     - name: PEERPORT2
       value: "30210"
     - name: ORDERER_URL
       value: {{ template "ibm-blockchain-network.name" . }}-orderer:31010
     - name: FABRIC_CFG_PATH
       value: /shared
    # - name: GODEBUG
    #   value: "netdns=go"
    volumeMounts:
    - mountPath: /shared
      name: {{ template "ibm-blockchain-shared.name" . }}-pvc
    - mountPath: /sampleconfig
      name: sampleconfig
  - name: bootstrap
    image: {{ .Values.fabric.toolsImage }}
    imagePullPolicy: {{ .Values.fabric.pullPolicy }}
    command:
      - sh
      - -c
      - |
        sleep 2s
        echo "Starting bootstrap"
        while [ ! -f /shared/status_configtxgen_complete ]; do
          echo Waiting for configtxgen
          sleep 5s
        done

        echo \"Starting bootstrap\" &&
        cp -r /sampleconfig/cas /shared &&
        echo \"Done copying\" &&
        touch /shared/bootstrapped &&
        rm -f /shared/status_configtxgen_complete &&
        mkdir -p /home/composer/.composer &&
        chown 1000 /home/composer/.composer &&
        touch /shared/status_bootstrapping_complete &&
        echo 'Done with bootstrapping'
    volumeMounts:
    - mountPath: /shared
      name: {{ template "ibm-blockchain-shared.name" . }}-pvc
    - mountPath: /home/composer/.composer
      name: {{ template "ibm-blockchain-composer.name" . }}-pvc
    - mountPath: /sampleconfig
      name: sampleconfig
